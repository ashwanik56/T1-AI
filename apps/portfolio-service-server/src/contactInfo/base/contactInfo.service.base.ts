/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, ContactInfo as PrismaContactInfo } from "@prisma/client";

export class ContactInfoServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ContactInfoCountArgs, "select">
  ): Promise<number> {
    return this.prisma.contactInfo.count(args);
  }

  async contactInfos(
    args: Prisma.ContactInfoFindManyArgs
  ): Promise<PrismaContactInfo[]> {
    return this.prisma.contactInfo.findMany(args);
  }
  async contactInfo(
    args: Prisma.ContactInfoFindUniqueArgs
  ): Promise<PrismaContactInfo | null> {
    return this.prisma.contactInfo.findUnique(args);
  }
  async createContactInfo(
    args: Prisma.ContactInfoCreateArgs
  ): Promise<PrismaContactInfo> {
    return this.prisma.contactInfo.create(args);
  }
  async updateContactInfo(
    args: Prisma.ContactInfoUpdateArgs
  ): Promise<PrismaContactInfo> {
    return this.prisma.contactInfo.update(args);
  }
  async deleteContactInfo(
    args: Prisma.ContactInfoDeleteArgs
  ): Promise<PrismaContactInfo> {
    return this.prisma.contactInfo.delete(args);
  }
}
